(examples-for best
  ("finds minimum of list"
   (best < '(3 5 4 7 8 2))
   2)

  ("finds minimum of list of syms"
   (best < '(c g d o p b m e g z m))
   b)

  ("finds minimum of list of strings"
   (best < '("c" "g" "d" "o" "p" "b" "z" "m"))
   "b")

  ("finds maximum of list of strings"
   (best > '("c" "g" "d" "o" "p" "b" "y" "m"))
   "y")

  ("finds maximum of list of syms"
   (best > '(c g d o a p b m e g a z m))
   z)

  ("finds object with max size"
   (to-string:best (map-compare-f > &size)
              (list { i 0 size 3 }
                    { i 1 size 1 }
                    { i 2 size 7 }
                    { i 3 size 4 }
                    { i 4 size 5 }))
   "{i=>2, size=>7}")

  ("finds maximum of list of numbers"
   (best > '(3 5 4 7 8 2))
   8))

(examples-for min
  ("finds minimum of list"
   (min 3 5 4 7 8 2)
   2))

(examples-for max
  ("finds minimum of list"
   (max 3 5 4 7 8 2)
   8))
