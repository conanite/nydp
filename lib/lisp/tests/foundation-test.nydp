(register-test '(suite "Foundation Tests"
  (suite "strings"
    (suite "string-split"
      ("splits a string using given expression"
        (string-split "a and b and c and d" " and ")
        ("a" "b" "c" "d")))

    (suite "string-replace"
      ("replaces parts of a string with the given replacement"
        (string-replace "and" "or" "a and b and c and d")
        "a or b or c or d"))

    (suite "type-of"
      ("returns 'string"
        (type-of "foobar")
        string)

      ("interpolates a string"
        "foobar ~(+ 1 2) you know"
        "foobar 3 you know")

      ("returns 'string for an interpolated string"
        (type-of "foobar %%(+ 1 2)")
        string)))

  (suite "truth and nil"
         ("t is boolean true"
          (if t "hello" "goodbye")
          "hello")

         ("nil is boolean fale"
          (if nil "hello" "goodbye")
          "goodbye")

         ("t is Truth"
          (type-of t)
          truth)

         ("nil is nil"
          (type-of nil)
          nil))

  (suite "Lists"
    (suite "cons"
      ("cons creates a list"
        (cons 'a '(b c))
        (a b c))

      ("cons conses two strings"
        (cons "a" "b")
        ("a" . "b"))

      ("len returns length of proper list"
        (len (cons "a" (cons "b" nil)))
        2)

      ("type-of returns pair"
        (type-of (cons "a" "b"))
        pair))

    (suite "car"
      ("car of nil is nil"
        (car nil)
        nil)

      ("car of empty list is nil"
        (car '())
        nil)

      ("car - no need to quote empty list"
        (car ())
        nil)

      ("car returns car of argument"
        (car '(foo 12.34 "bar"))
        foo)
    ))))
