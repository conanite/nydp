(examples-for explain-mac
  ("does nothing if n is zero"
   (explain-mac 0 '(afn (a) (+ 2 a)))
   (afn (a) (+ 2 a)))

  ("expands once for n = 1"
   (explain-mac 1 '(afn (a) (+ 2 a)))
   (rfn self (a) (+ 2 a)))

  ("expands twice for n = 2"
   (explain-mac 2 '(afn (a) (+ 2 a)))
   (let self nil (assign self (fn (a) (+ 2 a)))))

  ("expands thrice for n = 3"
   (explain-mac 3 '(afn (a) (+ 2 a)))
   (with (self nil) (assign self (fn (a) (+ 2 a)))))

  ("expands four times for n = 4"
   (explain-mac 4 '(afn (a) (+ 2 a)))
   ((fn (self) (assign self (fn (a) (+ 2 a)))) nil))

  ("returns same expression for n > number of possible expansions"
   (explain-mac 10 '(afn (a) (+ 2 a)))
   ((fn (self) (assign self (fn (a) (+ 2 a)))) nil)))
