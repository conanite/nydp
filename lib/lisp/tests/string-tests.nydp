(examples-for string-split
  ("splits a string using given expression"
   (string-split "a and b and c and d" " and ")
   ("a" "b" "c" "d"))

  ("with no delimiter argument, returns chars in string"
   (collect !empty? (string-split "word"))
   ("w" "o" "r" "d"))

  ("returns empty leading, internal, and trailing segments"
   (string-split "and" "and")
   ("" ""))

  ("returns empty leading, internal, and trailing segments"
   (string-split "andandand" "and")
   ("" "" "" "")))

(examples-for string-replace
  ("replaces parts of a string with the given replacement"
   (string-replace "and" "or" "a and b and c and d")
   "a or b or c or d")

  ("replace with regexp"
   (string-replace "and|or" "x" "a and b or c and d")
   "a x b x c x d"))

(examples-for string-truncate
  ("truncates a string to the given length"
   (string-truncate "a and b and c and d" 8)
   "a and b ")

  ("truncate to zero"
   (string-truncate "a and b and long and complex" 0)
   ""))

(examples-for string-match
  ("no match returns nil"
   (string-match "this that another" "XXXX")
   nil)

  ("match with regexp"
   (let m (string-match "a and b and c and d" "and")
     (list m.match m.captures))
   ("and" nil))

  ("no match with regexp"
   (let m (string-match "a and b and c and d" "not-in-string")
     (list m.match m.captures))
   (nil nil))

  ("match with regexp and capturing groups"
   (let m (string-match "  foo\b    bar" "(^\\s+)")
     (list m.match m.captures))
   ("  " ("  "))))

(examples-for string-pieces
  ("interpolates a string"
   "foobar ~(+ 1 2) you know"
   "foobar 3 you know"))

(examples-for joinstr
  ("joins elements into a string"
   (joinstr "" '("foo" "bar" "bax"))
   "foobarbax")

  ("joins separate elements into a string"
   (joinstr "/" "foo" "bar" "bax")
   "foo/bar/bax")

  ("joins a single thing"
   (joinstr "/" "foo")
   "foo")

  ("joins nested and separate elements into a string"
   (joinstr "/" "foo" "bar" '(twiddle diddle) "bax")
   "foo/bar/twiddle/diddle/bax")

  ("joins elements into a string"
   (joinstr " - " '(1 2 3))
   "1 - 2 - 3"))

(examples-for j
  ("joins elements with empty string"
   (j 1 2 3)
   "123")
  ("joins elements of a list with empty string"
   (j '(1 2 3))
   "123"))

(examples-for string-strip
  ("removes leading whitespace"               (string-strip "    hello!")  "hello!" )
  ("removes trailing whitespace"              (string-strip "(world)   ") "(world)" )
  ("removes leading and trailing whitespace"  (string-strip "\n\nme\n\n") "me"      ))
