(chapter-start 'string-manipulation "utilities for manipulating strings")

(def string-strip (txt)
  (string-replace "(^\\s+|\\s+$)" "" txt))

(def joinstr (txt . things)
  ; flatten 'things into a single list (ie unnest lists)
  ; convert each item to a string
  ; return a single string which is the concatenation of each
  ; stringified item, with given 'txt inserted in between
  ; each item
  (let joinables (flatten things)
    (apply +
           (to-string:car joinables)
           (flatten (map (fn (x) (list txt x))
                         (cdr joinables))))))

(def j items
  ; delegate to 'joinstr with an empty join string
  ; shortcut for (joinstr ""  items)
  (joinstr "" items))

(def string-pieces pieces
  ; string-interpolation syntax emits this form. Default implementation
  ; is to delegate to 'j , but containing forms may use macros that
  ; override this in order to provide specific interpolation behaviour
  ; (for example, formatting numbers or stripping HTML tags)
  (j pieces))
