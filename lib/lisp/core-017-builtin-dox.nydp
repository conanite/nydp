(dox-add-doc 'cons  'def '("with args a and b, returns a new cons cell, (a . b)") '(a b) nil)
(dox-add-doc 'car   'def '("with args a, where a is a cons cell (x . y), return x." "Commonly used to get the first element of a list") '(a) nil)
(dox-add-doc 'cdr   'def '("with args a, where a is a cons cell (x . y), return y." "Commonly used to get contents of a list, excluding the first element") '(a) nil)
(dox-add-doc '+     'def '("with rest-args things, return the sum of the elements of things." "Will also increment dates and concatenate strings and lists") 'things nil)
(dox-add-doc '-     'def '("return the result of subtracting all other args from the first arg." "(- a b c d) is equivalent to (- a (+ b c d))") 'things nil)
(dox-add-doc '*     'def '("with rest-args things, return the product of the elements of things.")    'things nil)
(dox-add-doc '/     'def '("return the result of dividing all other args into the first arg." "(/ a b c d) is equivalent to (/ a (* b c d))") 'things nil)
(dox-add-doc '>     'def '("true if each arg is greater than the next arg")                           'things nil)
(dox-add-doc '<     'def '("true if each arg is less than the next arg")                              'things nil)
